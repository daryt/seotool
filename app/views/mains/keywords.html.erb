<div class='container'>
	<div class='row'>
		<div class='col-xs-6' id='dynamic-content'>
		</div>
		<!-- load the partial content that will refresh via ajax -->
		<script>
			var url = "<%= j render(:partial => 'partial_keywords') %>"
			$('#dynamic-content').html(url);
		</script>

		<div class ='col-xs-6'>
			<div id='confirm'>
			</div>
		</div>
	</div>
</div>
<script>
$(document).ready(function(){
});

$(document).on('change','.keyword-option',function(){
});

// Perform client-side validations to ensure they aren't trying to use dupe keywords per topic
$(document).on('click','.validate-fields',function(){

	var formData = $('.form-horizontal').serializeObject();

	var keyword_ids = {};

	$.each(formData, function(key,value){
		if (key.indexOf('keyword') != -1)
		{
			// First, get the topic id and the keyword count of this keyword
			// Then, let's compare against the other keywords with the same topic id
			var topic_id = '';
			for (var i=0;i<key.length;i++)
			{
				if (key[i] != '_')
				{
					topic_id += key[i];
				}else{
					break;
				}
			}
			$.each(formData, function(key2,value2){
				if (key2.indexOf('keyword') != -1 && key != key2)
				{
					var topic_id_compare = '';
					var keyword_count = '';
					for (var i=0;i<key2.length;i++)
					{
						if (key2[i] != '_')
						{
							topic_id_compare += key2[i];
						}else{
							if (topic_id == topic_id_compare && value == value2)
							{
								keyword_ids[key] = "duplicate value";
							}
							break;
						}
					}
				}
			});
		}
	});

	if (Object.keys(keyword_ids).length > 0)
	{
		// alert('duplicate keyword ids found');
		$('#confirm').fadeOut(200, function(){
			$('#confirm').html('<h3 class="warning">Duplicate keywords detected!</h3><p>Please ensure each topic has three UNIQUE keywords</p>');
			$('#confirm').fadeIn(300);
		});
		return false;
	}
});

$(document).on('click','.new-keyword-submit',function(){
	var formData = $(this).siblings(".new-keyword-name").val();
	var topicID = $(this).attr('data-topic-id');
	console.log(formData);
	var html = '<h3>Add "' + formData + '" to database?</h3><button class="new-keyword-confirm" data-topic-id=' + topicID + ' value="' + formData + '">Yes</button>';
	$('#confirm').html(html);
	$(this).siblings(".new-keyword-name").val('');
	return false;
});

$(document).on('click','.new-keyword-confirm',function(){

	// Save selections so that they remain when the user creates a new keyword

    // One option: save to database every time the user clicks 'add keyword'
    // Warning 1: the user will be able to save duplicates in this manner
    // Warning 2: this code sends a post request, but expects no response? Investigate

	var formData = $('.form-horizontal').serializeObject();
    // console.log(formData);

    $.ajax({
	  type: "POST",
	  url: '/update_keywords/',
	  data: formData
	});

	formData = $(this).attr('value');
	var topicID = $(this).attr('data-topic-id');

	console.log(formData,topicID);

	$('#confirm').html('<%= image_tag "ajax-loader.gif" %>');

	$.ajax({
	    url : '/keywords/new', //Target URL for JSON file
	    method: 'POST',
	    data: {'keyword':formData, 'topic_id':topicID},
	    success : function(data){
	        $('#confirm').html('Success!');
	    },
	    error : function(xhr, status){
	        console.log(status);
	    }
	});

	return false;
});
</script>